{"pages":[],"posts":[{"title":"单击出现心心的详细代码","text":"在很多博客中，单击鼠标会出现动画效果，例如连续单击某处会出现很多浮动的心心，具体怎么实现，下面看代码的注释。 点击右上角代码可以复制 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869&lt;script type=\"text/javascript\"&gt; // 整个大函数是自执行函数 ! function(e, t, a) { function n() { c( //此处定义心心的形状，由一个正方形和两个直径等于正方形的边的伪类圆形组成，圆形各自向上移半径的距离，整体旋转了45度 \".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\" ), o(), r() } //递归调用动画 function r() { //判断数组d是否还存在元素 for (var e = 0; e &lt; d.length; e++) d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, d[ e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = \"left:\" + d[e].x + \"px;top:\" + d[e].y + \"px;opacity:\" + d[e].alpha + \";transform:scale(\" + d[e].scale + \",\" + d[e].scale + \") rotate(45deg);background:\" + d[e].color + \";z-index:99999\"); //动画：改变心心位置，透明度，大小 requestAnimationFrame(r) } //检测点击事件 function o() { var t = \"function\" == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function(e) { t &amp;&amp; t(), i(e) } } //创建DOM元素div heart，每生成一个心心就加入数组d，并插入&lt;body&gt;标签中 function i(e) { var a = t.createElement(\"div\"); a.className = \"heart\", d.push({ el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() }), t.body.appendChild(a) } //创建heart的样式，并插入&lt;head&gt;标签中 function c(e) { var a = t.createElement(\"style\"); a.type = \"text/css\"; try { a.appendChild(t.createTextNode(e)) } catch (t) { a.styleSheet.cssText = e } t.getElementsByTagName(\"head\")[0].appendChild(a) } //随机颜色 function s() { return \"rgb(\" + ~~(255 * Math.random()) + \",\" + ~~(255 * Math.random()) + \",\" + ~~(255 * Math.random()) + \")\" } //首先声明一个数组，用于存放心心元素 var d = []; //H5的API：requestAnimationFrame()，该函数传入回调函数，告诉浏览器在重绘之前所要执行的函数 e.requestAnimationFrame = function() { return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function(e) { setTimeout(e, 1e3 / 60) } }(), n()}(window, document);&lt;/script&gt; 将以上代码保存为love.js文件，放到博客主题文件夹/source/js/src中，然后在footer.ejs中插入： 12&lt;!--鼠标点击爱心动画--&gt;&lt;script type=\"text/javascript\" src=\"/js/src/love.js\"&gt;&lt;/script&gt; 在你的博客中点击某处就可以出现心心啦~","link":"/2019/12/30/%E5%8D%95%E5%87%BB%E5%87%BA%E7%8E%B0%E5%BF%83%E5%BF%83%E7%9A%84%E8%AF%A6%E7%BB%86%E4%BB%A3%E7%A0%81/"},{"title":"Markdown基础用法--使用Typora","text":"Markdown 简介Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。本基础教程在Typora下演示使用方法。 Markdown 标题使用 # 号标记标题，1-6个 # 号标记6个级别的标题 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 Markdown 格式 字体 12345678*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___ 分隔线 12345***or---or___ 删除线 1~~删除线~~ 效果：删除线 下划线 1&lt;u&gt;下划线&lt;/u&gt; 效果：下划线 脚注 12345[^要注明的文本]示例：Markdown基础用法 [^1] //鼠标移到1可显示脚注[^1]: 使用Typora Markdown基础用法 ^1 Markdown 列表Markdown 支持有序列表和无序列表。 无序列表使用星号(***)、加号(+)或是减号(-**)作为列表标记。 有序列表使用数字并加上 . 号来表示。 Markdown 区块 在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号。 区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推。 区块和列表可以相互嵌套。 Markdown 代码段落上的一个函数或片段的代码可以用反引号把它包起来（`） 用（```）可以新建代码块 Markdown 链接链接使用方法如下： 123[链接名称](链接地址)or&lt;链接地址&gt; 示例： 1[Luciano的Hexo博客](https://luciano233.github.io) 效果：Luciano的Hexo博客 高级链接： 1234链接也可以用变量来代替，文档末尾附带变量地址：这个链接用 1 作为网址变量 [Google][1]然后在文档的结尾为变量赋值（网址）[1]: http://www.google.com/ 效果：Google Markdown 图片Markdown 图片语法格式如下： 123![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;) 开头一个感叹号 ! 接着一个方括号，里面放上图片的替代文字 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。 Markdown 表格Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。 语法格式如下： 1234| 表头 | 表头 || ---- | ---- || 单元格 | 单元格 || 单元格 | 单元格 | 对齐方式： 可以设置表格的对齐方式：** -: 设置内容和标题栏居右对齐。 :- 设置内容和标题栏居左对齐。 :-: 设置内容和标题栏居中对齐。 实例： 1234| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 | Markdown基础用法就差不多是这些了，网上还有更详细的教程，谢谢观看","link":"/2019/12/12/Markdown%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95-%E4%BD%BF%E7%94%A8Typora/"}],"tags":[{"name":"javascript","slug":"javascript","link":"/tags/javascript/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"}],"categories":[{"name":"前端","slug":"前端","link":"/categories/%E5%89%8D%E7%AB%AF/"},{"name":"笔记","slug":"笔记","link":"/categories/%E7%AC%94%E8%AE%B0/"}]}